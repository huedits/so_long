==3375== Memcheck, a memory error detector
==3375== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3375== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3375== Command: ./so_long maps/small_map.ber
==3375== 
==3375== Conditional jump or move depends on uninitialised value(s)
==3375==    at 0x403DC4: get_size (in /home/coder/so_long/so_long)
==3375==    by 0x403C33: ft_itoa (in /home/coder/so_long/so_long)
==3375==    by 0x4037A8: render_map (game.c:58)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  Uninitialised value was created by a stack allocation
==3375==    at 0x402560: main (so_long.c:16)
==3375== 
==3375== Conditional jump or move depends on uninitialised value(s)
==3375==    at 0x403DD2: get_size (in /home/coder/so_long/so_long)
==3375==    by 0x403C33: ft_itoa (in /home/coder/so_long/so_long)
==3375==    by 0x4037A8: render_map (game.c:58)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  Uninitialised value was created by a stack allocation
==3375==    at 0x402560: main (so_long.c:16)
==3375== 
==3375== Conditional jump or move depends on uninitialised value(s)
==3375==    at 0x403E07: get_size (in /home/coder/so_long/so_long)
==3375==    by 0x403C33: ft_itoa (in /home/coder/so_long/so_long)
==3375==    by 0x4037A8: render_map (game.c:58)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  Uninitialised value was created by a stack allocation
==3375==    at 0x402560: main (so_long.c:16)
==3375== 
==3375== Conditional jump or move depends on uninitialised value(s)
==3375==    at 0x403CA4: fill_tab (in /home/coder/so_long/so_long)
==3375==    by 0x403C67: ft_itoa (in /home/coder/so_long/so_long)
==3375==    by 0x4037A8: render_map (game.c:58)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  Uninitialised value was created by a stack allocation
==3375==    at 0x402560: main (so_long.c:16)
==3375== 
==3375== Conditional jump or move depends on uninitialised value(s)
==3375==    at 0x403CE0: fill_tab (in /home/coder/so_long/so_long)
==3375==    by 0x403C67: ft_itoa (in /home/coder/so_long/so_long)
==3375==    by 0x4037A8: render_map (game.c:58)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  Uninitialised value was created by a stack allocation
==3375==    at 0x402560: main (so_long.c:16)
==3375== 
==3375== Conditional jump or move depends on uninitialised value(s)
==3375==    at 0x483EF49: strlen (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3375==    by 0x404F0F: mlx_string_put (in /home/coder/so_long/so_long)
==3375==    by 0x403804: render_map (game.c:60)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  Uninitialised value was created by a stack allocation
==3375==    at 0x402560: main (so_long.c:16)
==3375== 
==3375== Use of uninitialised value of size 8
==3375==    at 0x403A4F: img_sprite_put (game.c:97)
==3375==    by 0x4038A6: print_img_from_map (game.c:77)
==3375==    by 0x40384A: render_map (game.c:68)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  Uninitialised value was created by a stack allocation
==3375==    at 0x402560: main (so_long.c:16)
==3375== 
==3375== Conditional jump or move depends on uninitialised value(s)
==3375==    at 0x403A52: img_sprite_put (game.c:97)
==3375==    by 0x4038A6: print_img_from_map (game.c:77)
==3375==    by 0x40384A: render_map (game.c:68)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  Uninitialised value was created by a stack allocation
==3375==    at 0x402560: main (so_long.c:16)
==3375== 
==3375== Use of uninitialised value of size 8
==3375==    at 0x403A4F: img_sprite_put (game.c:97)
==3375==    by 0x4038EB: print_img_from_map (game.c:79)
==3375==    by 0x40384A: render_map (game.c:68)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  Uninitialised value was created by a stack allocation
==3375==    at 0x402560: main (so_long.c:16)
==3375== 
==3375== Invalid read of size 1
==3375==    at 0x403A4F: img_sprite_put (game.c:97)
==3375==    by 0x4038EB: print_img_from_map (game.c:79)
==3375==    by 0x40384A: render_map (game.c:68)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  Address 0xc2 is not stack'd, malloc'd or (recently) free'd
==3375== 
==3375== 
==3375== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3375==  Access not within mapped region at address 0xC2
==3375==    at 0x403A4F: img_sprite_put (game.c:97)
==3375==    by 0x4038EB: print_img_from_map (game.c:79)
==3375==    by 0x40384A: render_map (game.c:68)
==3375==    by 0x403328: handle_no_event (handlers.c:28)
==3375==    by 0x404C2C: mlx_loop (in /home/coder/so_long/so_long)
==3375==    by 0x40264F: main (so_long.c:32)
==3375==  If you believe this happened as a result of a stack
==3375==  overflow in your program's main thread (unlikely but
==3375==  possible), you can try to increase the size of the
==3375==  main thread stack using the --main-stacksize= flag.
==3375==  The main thread stack size used in this run was 8388608.
==3375== 
==3375== HEAP SUMMARY:
==3375==     in use at exit: 57,120 bytes in 79 blocks
==3375==   total heap usage: 731 allocs, 652 frees, 85,205 bytes allocated
==3375== 
==3375== LEAK SUMMARY:
==3375==    definitely lost: 0 bytes in 0 blocks
==3375==    indirectly lost: 0 bytes in 0 blocks
==3375==      possibly lost: 0 bytes in 0 blocks
==3375==    still reachable: 57,120 bytes in 79 blocks
==3375==         suppressed: 0 bytes in 0 blocks
==3375== Rerun with --leak-check=full to see details of leaked memory
==3375== 
==3375== For lists of detected and suppressed errors, rerun with: -s
==3375== ERROR SUMMARY: 10 errors from 10 contexts (suppressed: 1 from 1)
